name: Release Obsidian plugin

on:
  push:
    tags:
      - "*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Build plugin
        run: |
          npm ci
          npm run build

      - name: Verify build output
        run: |
          echo "Checking build output..."
          ls -la main.js manifest.json styles.css
          echo "Build verification complete"
          echo "File sizes:"
          du -h main.js manifest.json styles.css

      - name: Setup GitHub CLI
        run: |
          echo "Setting up GitHub CLI..."
          gh --version

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag="${GITHUB_REF#refs/tags/}"

          echo "Creating release for tag: $tag"

          # Check if release already exists
          if gh release view "$tag" >/dev/null 2>&1; then
            echo "Release $tag already exists, deleting..."
            gh release delete "$tag" --yes
          fi

          # Create the release
          echo "Creating release..."
          gh release create "$tag" \
            --title="$tag" \
            --draft \
            --notes="Release $tag

          ## What's New
          - Folder exclusion feature: Exclude specific folders when using 'Every folder' scope
          - Improved settings UI with folder management
          - Enhanced validation and error handling

          ## Built files:
          - main.js (plugin bundle)
          - manifest.json (plugin metadata)
          - styles.css (plugin styles)"

          # Upload files to the release
          echo "Uploading files to release..."
          gh release upload "$tag" \
            main.js \
            manifest.json \
            styles.css

          # Edit release to make it public (not draft)
          echo "Publishing release..."
          gh release edit "$tag" \
            --draft=false

          echo "âœ… Release $tag created successfully!"